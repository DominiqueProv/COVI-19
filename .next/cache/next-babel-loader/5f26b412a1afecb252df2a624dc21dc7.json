{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from 'react'; //we want to call it only once...\n// function with 'url' as argument\n\nexport default function useInfoAPI(url) {\n  //useState\n  var _useState = useState(),\n      stats = _useState[0],\n      setStats = _useState[1]; //useEffect with async function to fetch\n\n\n  useEffect(function () {\n    function fetchData() {\n      var data;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (res) {\n                return res.json();\n              }));\n\n            case 2:\n              data = _context.sent;\n              //update the initial stats\n              setStats(data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    } //call function to fetch\n\n\n    fetchData();\n  }, []); //return something\n\n  return stats;\n}","map":{"version":3,"sources":["/Users/Domingo/WEB-Project/COVI-19/utils/useStats.js"],"names":["useState","useEffect","useInfoAPI","url","stats","setStats","fetchData","fetch","then","res","json","data"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CAEA;AAEA;;AACA,eAAe,SAASC,UAAT,CAAoBC,GAApB,EAAyB;AACtC;AADsC,kBAEZH,QAAQ,EAFI;AAAA,MAE/BI,KAF+B;AAAA,MAExBC,QAFwB,iBAGtC;;;AACAJ,EAAAA,SAAS,CAAC,YAAM;AACd,aAAeK,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEqBC,KAAK,CAACJ,GAAD,CAAL,CAChBK,IADgB,CACX,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eADQ,CAFrB;;AAAA;AAEQC,cAAAA,IAFR;AAIE;AACAN,cAAAA,QAAQ,CAACM,IAAD,CAAR;;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADc,CAQd;;;AACAL,IAAAA,SAAS;AACV,GAVQ,EAUN,EAVM,CAAT,CAJsC,CAetC;;AACA,SAAOF,KAAP;AACD","sourcesContent":["import { useState, useEffect } from 'react';\n\n//we want to call it only once...\n\n// function with 'url' as argument\nexport default function useInfoAPI(url) {\n  //useState\n  const [stats, setStats] = useState();\n  //useEffect with async function to fetch\n  useEffect(() => {\n    async function fetchData() {\n      //encapsulate the response process with .json() in a var data (await)\n      const data = await fetch(url)\n        .then(res => res.json());\n      //update the initial stats\n      setStats(data);\n    }\n    //call function to fetch\n    fetchData();\n  }, []);\n  //return something\n  return stats;\n}\n"]},"metadata":{},"sourceType":"module"}