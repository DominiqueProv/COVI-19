{"ast":null,"code":"var _jsxFileName = \"/Users/Domingo/WEB-Project/COVI-19/components/Stats.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useStats from '../utils/useStats';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport styled from 'styled-components';\nexport default function Stats({\n  url\n}) {\n  //passing down the full url as a param to 'useInfoAPI'\n  const {\n    stats\n  } = useStats(url); //if statement for the loader to kick in (!stats) \n\n  if (!stats) return __jsx(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }); //return someting JSX\n\n  return __jsx(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"StatBlock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Confirmed: \"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, stats.confirmed.value)), __jsx(\"div\", {\n    className: \"StatBlock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Deaths: \"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, stats.deaths.value)), __jsx(\"div\", {\n    className: \"StatBlock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Recovered: \"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, stats.recovered.value)));\n}\nconst Wrapper = styled.div`\ndisplay: flex;\n\n  div{\n    background-color: #eee;\n  }\n\n\n`;","map":{"version":3,"sources":["/Users/Domingo/WEB-Project/COVI-19/components/Stats.js"],"names":["useStats","CircularProgress","styled","Stats","url","stats","confirmed","value","deaths","recovered","Wrapper","div"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,mBAArB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAIA,eAAe,SAASC,KAAT,CAAe;AAACC,EAAAA;AAAD,CAAf,EAAsB;AACnC;AACA,QAAM;AAACC,IAAAA;AAAD,MAAUL,QAAQ,CAACI,GAAD,CAAxB,CAFmC,CAGnC;;AACA,MAAI,CAACC,KAAL,EAAY,OAAO,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,CAJuB,CAKnC;;AACA,SACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,KAAK,CAACC,SAAN,CAAgBC,KAAvB,CAFF,CADF,EAKE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,KAAK,CAACG,MAAN,CAAaD,KAApB,CAFF,CALF,EASE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,KAAK,CAACI,SAAN,CAAgBF,KAAvB,CAFF,CATF,CADF;AAgBD;AAGD,MAAMG,OAAO,GAAGR,MAAM,CAACS,GAAI;;;;;;;;CAA3B","sourcesContent":["import useStats from '../utils/useStats';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport styled from 'styled-components';\n\n\n\nexport default function Stats({url}) {\n  //passing down the full url as a param to 'useInfoAPI'\n  const {stats} = useStats(url);\n  //if statement for the loader to kick in (!stats) \n  if (!stats) return <CircularProgress />;\n  //return someting JSX\n  return (\n    <Wrapper>\n      <div className=\"StatBlock\">\n        <h3>Confirmed: </h3>\n        <span>{stats.confirmed.value}</span>\n      </div>\n      <div className=\"StatBlock\">\n        <h3>Deaths: </h3>\n        <span>{stats.deaths.value}</span>\n      </div>\n      <div className=\"StatBlock\">\n        <h3>Recovered: </h3>\n        <span>{stats.recovered.value}</span>\n      </div>\n    </Wrapper>\n  );\n}\n\n\nconst Wrapper = styled.div`\ndisplay: flex;\n\n  div{\n    background-color: #eee;\n  }\n\n\n`"]},"metadata":{},"sourceType":"module"}