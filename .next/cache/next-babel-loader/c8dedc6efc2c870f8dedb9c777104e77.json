{"ast":null,"code":"var _jsxFileName = \"/Users/Domingo/WEB-Project/COVI-19/components/CountrySelector.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useStats from '../utils/useStats';\nimport { useState } from 'react';\nimport Stats from './Stats';\nimport styled from 'styled-components';\nimport StatsIndividual from './StatsIndividual';\nexport default function CountrySelector() {\n  const {\n    stats: countries\n  } = useStats('https://covid19.mathdro.id/api/countries');\n  const {\n    0: selectedCountry,\n    1: setSelectedCountry\n  } = useState('CA'); //if statement for the loader to kick in (!stats) \n\n  if (!countries) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }); //return someting JSX\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(Browse, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Browse by country\"), __jsx(\"select\", {\n    onChange: event => {\n      setSelectedCountry(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, Object.entries(countries.countries).map(([country, code]) => __jsx(\"option\", {\n    selected: selectedCountry === code,\n    key: code,\n    value: code,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, country)))), __jsx(StatsIndividual, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"url=\", `https://covid19.mathdro.id/api/countries/${selectedCountry}`), __jsx(Stats, {\n    url: `https://covid19.mathdro.id/api/countries/${selectedCountry}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })));\n}\nconst Browse = styled.div`\n  margin: 20px;\n    h2{\n      font-size: 1.2em;\n    }\n\n`; //Object.entries first to be able to run map on a array\n//Arrow function implies a return () instead of {}\n//","map":{"version":3,"sources":["/Users/Domingo/WEB-Project/COVI-19/components/CountrySelector.js"],"names":["useStats","useState","Stats","styled","StatsIndividual","CountrySelector","stats","countries","selectedCountry","setSelectedCountry","event","target","value","Object","entries","map","country","code","Browse","div"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,mBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,eAAe,SAASC,eAAT,GAA2B;AACxC,QAAM;AAAEC,IAAAA,KAAK,EAAEC;AAAT,MAAuBP,QAAQ,CAAC,0CAAD,CAArC;AACA,QAAM;AAAA,OAACQ,eAAD;AAAA,OAAkBC;AAAlB,MAAwCR,QAAQ,CAAC,IAAD,CAAtD,CAFwC,CAGxC;;AACA,MAAI,CAACM,SAAL,EAAgB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,CAJwB,CAKxC;;AACA,SACE,4BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,EAEA;AACE,IAAA,QAAQ,EAAEG,KAAK,IAAI;AACjBD,MAAAA,kBAAkB,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlB;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGC,MAAM,CAACC,OAAP,CAAeP,SAAS,CAACA,SAAzB,EAAoCQ,GAApC,CAAwC,CAAC,CAACC,OAAD,EAAUC,IAAV,CAAD,KACvC;AAAQ,IAAA,QAAQ,EAAET,eAAe,KAAKS,IAAtC;AACE,IAAA,GAAG,EAAEA,IADP;AAEE,IAAA,KAAK,EAAEA,IAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGD,OAHH,CADD,CALH,CAFA,CADF,EAiBE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACQ,4CAA2CR,eAAgB,EADnE,CAjBF,EAoBE,MAAC,KAAD;AACE,IAAA,GAAG,EAAG,4CAA2CA,eAAgB,EADnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,CAFF,CADF;AA6BD;AAEA,MAAMU,MAAM,GAAGf,MAAM,CAACgB,GAAI;;;;;;CAA1B,C,CAQK;AACA;AACA","sourcesContent":["import useStats from '../utils/useStats';\nimport { useState } from 'react';\nimport Stats from './Stats';\nimport styled from 'styled-components';\nimport StatsIndividual from './StatsIndividual';\n\nexport default function CountrySelector() {\n  const { stats: countries } = useStats('https://covid19.mathdro.id/api/countries');\n  const [selectedCountry, setSelectedCountry] = useState('CA');\n  //if statement for the loader to kick in (!stats) \n  if (!countries) return <p></p>;\n  //return someting JSX\n  return (\n    <>\n\n      <div>\n        <Browse>\n        <h2>Browse by country</h2>\n        <select\n          onChange={event => {\n            setSelectedCountry(event.target.value);\n          }}\n        >\n          {Object.entries(countries.countries).map(([country, code]) => (\n            <option selected={selectedCountry === code}\n              key={code}\n              value={code}>\n              {country}\n            </option>\n          ))}\n        </select>\n        </Browse>\n        <StatsIndividual>\n          url={`https://covid19.mathdro.id/api/countries/${selectedCountry}`}\n        </StatsIndividual>\n        <Stats\n          url={`https://covid19.mathdro.id/api/countries/${selectedCountry}`}\n        ></Stats>\n      </div>\n    </>\n  );\n}\n\n const Browse = styled.div`\n  margin: 20px;\n    h2{\n      font-size: 1.2em;\n    }\n\n`\n\n      //Object.entries first to be able to run map on a array\n      //Arrow function implies a return () instead of {}\n      //\n"]},"metadata":{},"sourceType":"module"}