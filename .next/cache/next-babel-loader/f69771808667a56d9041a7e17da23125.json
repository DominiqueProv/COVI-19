{"ast":null,"code":"var _jsxFileName = \"/Users/Domingo/WEB-Project/COVI-19/components/CountrySelector.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useStats from '../utils/useStats';\nimport { useState } from 'react';\nimport Stats from './Stats';\nexport default function CountrySelector() {\n  const {\n    stats: countries,\n    loading,\n    error\n  } = useStats('https://covid19.mathdro.id/api/countries');\n  const {\n    0: selectedCountry,\n    1: setSelectedCountry\n  } = useState('CA'); //if statement for the loader to kick in (!stats) \n\n  if (!countries) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Loading...\"); //return someting JSX\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Currently Showing \", selectedCountry), __jsx(\"select\", {\n    onChange: event => {\n      setSelectedCountry(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, Object.entries(countries.countries).map(([country, code]) => __jsx(\"option\", {\n    selected: selectedCountry === code,\n    key: code,\n    value: code,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, country))), __jsx(Stats, {\n    url: `https://covid19.mathdro.id/api/countries/${selectedCountry}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }));\n} //Object.entries first to be able to run map on a array\n//Arrow function implies a return () instead of {}\n//","map":{"version":3,"sources":["/Users/Domingo/WEB-Project/COVI-19/components/CountrySelector.js"],"names":["useStats","useState","Stats","CountrySelector","stats","countries","loading","error","selectedCountry","setSelectedCountry","event","target","value","Object","entries","map","country","code"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,mBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,eAAe,SAASC,eAAT,GAA2B;AACxC,QAAM;AAAEC,IAAAA,KAAK,EAAEC,SAAT;AAAoBC,IAAAA,OAApB;AAA6BC,IAAAA;AAA7B,MAAuCP,QAAQ,CAAC,0CAAD,CAArD;AACA,QAAM;AAAA,OAACQ,eAAD;AAAA,OAAkBC;AAAlB,MAAwCR,QAAQ,CAAC,IAAD,CAAtD,CAFwC,CAGxC;;AACA,MAAI,CAACI,SAAL,EAAgB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP,CAJwB,CAKxC;;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuBG,eAAvB,CADF,EAEE;AACE,IAAA,QAAQ,EAAEE,KAAK,IAAI;AACjBD,MAAAA,kBAAkB,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlB;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGC,MAAM,CAACC,OAAP,CAAeT,SAAS,CAACA,SAAzB,EAAoCU,GAApC,CAAwC,CAAC,CAACC,OAAD,EAASC,IAAT,CAAD,KACvC;AAAQ,IAAA,QAAQ,EAAET,eAAe,KAAKS,IAAtC;AACQ,IAAA,GAAG,EAAEA,IADb;AAEQ,IAAA,KAAK,EAAEA,IAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGD,OAHH,CADD,CALH,CAFF,EAeE,MAAC,KAAD;AACE,IAAA,GAAG,EAAG,4CAA2CR,eAAgB,EADnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF;AAqBD,C,CAIK;AACA;AACA","sourcesContent":["import useStats from '../utils/useStats';\nimport { useState } from 'react';\nimport Stats from './Stats';\n\nexport default function CountrySelector() {\n  const { stats: countries, loading, error } = useStats('https://covid19.mathdro.id/api/countries');\n  const [selectedCountry, setSelectedCountry] = useState('CA');\n  //if statement for the loader to kick in (!stats) \n  if (!countries) return <p>Loading...</p>;\n  //return someting JSX\n  return (\n    <div>\n      <h2>Currently Showing {selectedCountry}</h2>\n      <select\n        onChange={event => {\n          setSelectedCountry(event.target.value);\n        }}\n        >\n        {Object.entries(countries.countries).map(([country,code]) => (\n          <option selected={selectedCountry === code}\n                  key={code} \n                  value={code}>\n            {country}\n            </option>\n        ))}\n      </select>\n      <Stats\n        url={`https://covid19.mathdro.id/api/countries/${selectedCountry}`}\n        ></Stats>\n    </div>\n  );\n}\n\n\n\n      //Object.entries first to be able to run map on a array\n      //Arrow function implies a return () instead of {}\n      //\n"]},"metadata":{},"sourceType":"module"}