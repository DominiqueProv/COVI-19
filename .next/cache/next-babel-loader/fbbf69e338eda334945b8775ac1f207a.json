{"ast":null,"code":"import { useState, useEffect } from 'react'; //we want to call it only once...\n// function with 'url' as argument\n\nexport default function useStats(url) {\n  console.log(url); //useState\n\n  const {\n    0: stats,\n    1: setStats\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(); //useEffect with async function to fetch\n\n  useEffect(() => {\n    console.log('Mounting or updating');\n\n    async function fetchData() {\n      setLoading(true); //encapsulate the response process with .json() in a var data (await)\n\n      const data = await fetch(url).then(res => res.json()); //update the initial stats\n\n      setStats(data);\n    } //call function to fetch\n\n\n    fetchData();\n  }, []); //return something\n\n  return stats, loading, error;\n}","map":{"version":3,"sources":["/Users/Domingo/WEB-Project/COVI-19/utils/useStats.js"],"names":["useState","useEffect","useStats","url","console","log","stats","setStats","loading","setLoading","error","setError","fetchData","data","fetch","then","res","json"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CAEA;AAEA;;AACA,eAAe,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EADoC,CAEpC;;AACA,QAAM;AAAA,OAACG,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,EAAlC;AACA,QAAM;AAAA,OAACQ,OAAD;AAAA,OAAUC;AAAV,MAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACU,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,EAAlC,CALoC,CAMpC;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;;AAEA,mBAAeO,SAAf,GAA2B;AACzBH,MAAAA,UAAU,CAAC,IAAD,CAAV,CADyB,CAEzB;;AACA,YAAMI,IAAI,GAAG,MAAMC,KAAK,CAACX,GAAD,CAAL,CAChBY,IADgB,CACXC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADI,CAAnB,CAHyB,CAKzB;;AACAV,MAAAA,QAAQ,CAACM,IAAD,CAAR;AACD,KAVa,CAWd;;;AACAD,IAAAA,SAAS;AACV,GAbQ,EAaN,EAbM,CAAT,CAPoC,CAqBpC;;AACA,SAAON,KAAK,EACNE,OADM,EAENE,KAFN;AAGD","sourcesContent":["import { useState, useEffect } from 'react';\n\n//we want to call it only once...\n\n// function with 'url' as argument\nexport default function useStats(url) {\n  console.log(url)\n  //useState\n  const [stats, setStats] = useState();\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState()\n  //useEffect with async function to fetch\n  useEffect(() => {\n    console.log('Mounting or updating');\n    \n    async function fetchData() {\n      setLoading(true);\n      //encapsulate the response process with .json() in a var data (await)\n      const data = await fetch(url)\n        .then(res => res.json());\n      //update the initial stats\n      setStats(data);\n    }\n    //call function to fetch\n    fetchData();\n  }, []);\n  //return something\n  return stats,\n        loading,\n        error\n}\n"]},"metadata":{},"sourceType":"module"}